/*
 * Data_collectorView.java
 */

package data_collector;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import org.omg.PortableInterceptor.SYSTEM_EXCEPTION;

/**
 * The application's main frame.
 */
public class Data_collectorView extends FrameView {
        private static final String failURL = "http://sigma.ug.edu.pl/~aradomski/response.php";
        private static final String successURL = "http://sigma.ug.edu.pl/~aradomski/response.php";
    
    
        private static final int TMOBILE =2;
        private static final int ORANGE = 3;
        private static final int PLUS = 1;
        private static final int PLAY = 6;
        private static final int ERROR = -1;

    public Data_collectorView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
              
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
             
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
   
       

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                    
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                   
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
              
                 
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                  
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                 
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = Data_collectorApp.getApplication().getMainFrame();
            aboutBox = new Data_collectorAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        Data_collectorApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jtp_password = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtf_login = new javax.swing.JTextField();
        jtf_recieverNumber = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jcb_sponsored = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jta_message = new javax.swing.JTextArea();
        jtf_error = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(data_collector.Data_collectorApp.class).getContext().getResourceMap(Data_collectorView.class);
        jtp_password.setText(resourceMap.getString("jtp_password.text")); // NOI18N
        jtp_password.setName("jtp_password"); // NOI18N
        jtp_password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtp_passwordMouseClicked(evt);
            }
        });
        jtp_password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtp_passwordFocusGained(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jtf_login.setText(resourceMap.getString("jtf_login.text")); // NOI18N
        jtf_login.setName("jtf_login"); // NOI18N

        jtf_recieverNumber.setText(resourceMap.getString("jtf_reciever_number.text")); // NOI18N
        jtf_recieverNumber.setName("jtf_reciever_number"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jcb_sponsored.setText(resourceMap.getString("jcb_sponsored.text")); // NOI18N
        jcb_sponsored.setName("jcb_sponsored"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jta_message.setColumns(20);
        jta_message.setRows(5);
        jta_message.setText(resourceMap.getString("jta_message.text")); // NOI18N
        jta_message.setName("jta_message"); // NOI18N
        jta_message.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jta_messageMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jta_message);

        jtf_error.setText(resourceMap.getString("jtf_error.text")); // NOI18N
        jtf_error.setName("jtf_error"); // NOI18N

        jButton1.setText(resourceMap.getString("jb_guzik.text")); // NOI18N
        jButton1.setName("jb_guzik"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jtf_error, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addGap(7, 7, 7)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtf_recieverNumber)
                            .addComponent(jtf_login)
                            .addComponent(jtp_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jcb_sponsored)))
                .addGap(51, 51, 51))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_recieverNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(16, 16, 16)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtp_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jcb_sponsored))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtf_error, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(data_collector.Data_collectorApp.class).getContext().getActionMap(Data_collectorView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void jta_messageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jta_messageMouseClicked
       jta_message.setText(null);
    }//GEN-LAST:event_jta_messageMouseClicked

    private void jtp_passwordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtp_passwordMouseClicked
      jtp_password.setText(null);
    }//GEN-LAST:event_jtp_passwordMouseClicked

    private void jtp_passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtp_passwordFocusGained
        jtp_password.setText(null);
    }//GEN-LAST:event_jtp_passwordFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // TODO add your handling code here:
        //  System.out.println(jtp_password.getPassword());
        NumberMatch numberMatch = new NumberMatch();
        int networkOperator = -1;
        try{
            networkOperator = numberMatch.matchNumber(jtf_recieverNumber.getText());
        }catch (IOException ex){
            Logger.getLogger(Data_collectorView.class.getName()).log(Level.SEVERE, null, ex);
        }
        char [] pass = jtp_password.getPassword();

        switch (networkOperator){
            case TMOBILE: try {
                System.out.println("T-mobile/Era");
                Tmobile_sender tmobileSender = new Tmobile_sender(jtf_login.getText(), pass, jtf_recieverNumber.getText(), jcb_sponsored.isSelected(), jta_message.getText(), false, failURL, successURL);

            } catch (IOException ex) {
                Logger.getLogger(Data_collectorView.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            case ERROR: System.out.println("Błąd wyszukiwania operatora");
            jtf_error.setText("Błąd wyszukiwania operatora");
            break;
            default: System.out.println("Nie znaleziono operatora tego numeru");
            jtf_error.setText("Nie znaleziono operatora tego numeru");
            break;
        }
}//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jcb_sponsored;
    private javax.swing.JTextArea jta_message;
    private javax.swing.JTextField jtf_error;
    private javax.swing.JTextField jtf_login;
    private javax.swing.JTextField jtf_recieverNumber;
    private javax.swing.JPasswordField jtp_password;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;



}
